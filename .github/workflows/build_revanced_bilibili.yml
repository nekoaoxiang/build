name: Build Revanced bilibili

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        USERNAME: "BiliRoamingX"
        REPO: "BiliRoamingX"
    steps:
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '22'
        distribution: 'temurin'

    - name: Check if latest release commit matches latest main commit
      id: check_commits
      run: |
        TAG_NAME=$(curl -s "https://api.github.com/repos/$USERNAME/$REPO/releases/latest" | grep '"tag_name":' | head -n 1 | awk -F '"' '{print $4}')
        
        LATEST_RELEASE_COMMIT=$(curl -s "https://api.github.com/repos/$USERNAME/$REPO/commits/$TAG_NAME" | grep '"sha":' | head -n 1 | awk -F '"' '{print $4}')
        
        LATEST_COMMIT=$(curl -s "https://api.github.com/repos/$USERNAME/$REPO/commits/main" | grep '"sha":' | head -n 1 | awk -F '"' '{print $4}')
        
        if [ "$LATEST_RELEASE_COMMIT" == "$LATEST_COMMIT" ]; then
            echo "hash 一致, 为 $LATEST_RELEASE_COMMIT"
            echo "commits_match=true" >> $GITHUB_ENV
        else
            echo "hash 不一致"
            echo "最新发行版为 $LATEST_RELEASE_COMMIT"
            echo "最新提交为 $LATEST_COMMIT"
            echo "commits_match=false" >> $GITHUB_ENV
        fi

    - name: Checkout repository
      if: env.commits_match == 'false'
      uses: actions/checkout@v4
      with:
        repository: BiliRoamingX/BiliRoamingX
        ref: main
        path: BiliRoamingX
        fetch-depth: 0

    - name: Cache gradle
      if: env.commits_match == 'false'
      uses: actions/cache@v4
      with:
        path: |
          ~/BiliRoamingX/.gradle/caches
          ~/BiliRoamingX/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('BiliRoamingX/**/*.gradle*', 'BiliRoamingX/**/gradle-wrapper.properties', 'BiliRoamingX/gradle/*.versions.toml') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Retrieve version
      if: env.commits_match == 'false'
      run: |
        cd BiliRoamingX
        version=`awk -F "=" '$1 == "version" {print $2}' gradle.properties`
        commit_count=`git rev-list main --count`
        version="${version}.r${commit_count}"
        echo "VERSION=$version" >> $GITHUB_ENV

    - name: Build BiliRoamingX
      if: env.commits_match == 'false'
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        cd BiliRoamingX
        ./gradlew --no-daemon -Dorg.gradle.jvmargs=-Xmx2g -Pversion=$VERSION dist
        mv ./BiliRoamingX/build/BiliRoamingX-* .

    - name: Download BiliRoamingX
      if: env.commits_match == 'true'
      run: |
        RELEASE_DATA=$(curl -s "https://api.github.com/repos/$USERNAME/$REPO/releases/latest")

        DOWNLOAD_URL=$(echo "$RELEASE_DATA" | grep '"browser_download_url":' | grep 'BiliRoamingX-integrations' | head -n 1 | awk -F '"' '{print $4}')
        wget -qq $DOWNLOAD_URL

        DOWNLOAD_URL=$(echo "$RELEASE_DATA" | grep '"browser_download_url":' | grep 'BiliRoamingX-patches' | head -n 1 | awk -F '"' '{print $4}')
        wget -qq $DOWNLOAD_URL

    - name: Prepare apk
      run: |
        wget -qq https://github.com/nekoaoxiang/build/releases/latest/download/bilibili.apk
        sudo unzip bilibili.apk -d temp_dir
        cd temp_dir
        sudo zip -r ../bilibili-fixed.apk *

    - name: Build bilibili
      run: |
        mkdir build && cd build
        wget -qq https://github.com/zjns/revanced-cli/releases/latest/download/revanced-cli.jar
        java -jar revanced-cli.jar patch --merge ../BiliRoamingX-integrations*.apk --patch-bundle ../BiliRoamingX-patches*.jar --signing-levels 3 ../bilibili-fixed.apk

    - name: Upload bilibili
      uses: actions/upload-artifact@v4
      with:
        name: bilibili
        path: "./build/*.apk"
